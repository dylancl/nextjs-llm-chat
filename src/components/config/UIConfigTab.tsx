'use client';

import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { Switch } from '@/components/ui/switch';
import { Config } from '@/hooks/useApiConfig';

interface UIConfigTabProps {
  config: Config;
  onConfigChange: (updates: Partial<Config>) => void;
}

export function UIConfigTab({ config, onConfigChange }: UIConfigTabProps) {
  return (
    <div className="space-y-6">
      <div>
        <h3 className="text-sm font-medium text-foreground mb-3">
          Streaming Animation
        </h3>
        <p className="text-xs text-muted-foreground mb-4">
          Customize how streaming text appears as it&apos;s being generated by
          the AI.
        </p>

        <div className="space-y-4">
          <div>
            <Label htmlFor="streaming-style" className="text-xs">
              Animation Style
            </Label>
            <Select
              value={config.streamingAnimationStyle}
              onValueChange={(value: Config['streamingAnimationStyle']) =>
                onConfigChange({ streamingAnimationStyle: value })
              }
            >
              <SelectTrigger className="h-8">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="none">None - Instant</SelectItem>
                <SelectItem value="smooth">Smooth Fade-in</SelectItem>
                <SelectItem value="typewriter">Typewriter Effect</SelectItem>
                <SelectItem value="highlight">Highlight New Text</SelectItem>
              </SelectContent>
            </Select>
            <p className="text-xs text-muted-foreground mt-1">
              Choose how new text appears during streaming
            </p>
          </div>

          <div className="flex items-center justify-between">
            <div className="space-y-0.5">
              <Label className="text-xs">Show Streaming Cursor</Label>
              <p className="text-xs text-muted-foreground">
                Display a cursor indicator while text is streaming
              </p>
            </div>
            <Switch
              checked={config.showStreamingCursor}
              onCheckedChange={(checked) =>
                onConfigChange({ showStreamingCursor: checked })
              }
            />
          </div>
        </div>
      </div>

      <div className="border-t pt-4">
        <h3 className="text-sm font-medium text-foreground mb-3">Preview</h3>
        <div className="bg-muted/50 rounded-lg p-3 text-xs">
          <div className="flex items-start gap-2">
            <div className="w-6 h-6 rounded-full bg-primary/20 flex items-center justify-center text-xs">
              AI
            </div>
            <div className="flex-1">
              <p
                className={`${
                  config.streamingAnimationStyle !== 'none'
                    ? 'streaming-content'
                    : ''
                }`}
              >
                This is how streaming text will appear...
                {config.showStreamingCursor && (
                  <span
                    className={`inline-block w-2 h-4 bg-primary ml-1 ${
                      config.streamingAnimationStyle === 'typewriter'
                        ? 'typing-cursor'
                        : 'animate-pulse'
                    }`}
                  />
                )}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
